server:
  port: 8092

spring:
  application:
    name: stock-app
  datasource:
    username: root
    password: hjXL327918
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/sca_stock?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
  cloud:
    nacos:
      #登录控制台的 用户名/密码
      discovery:
        username: nacos
        password: nacos
        namespace: public
        server-addr: 127.0.0.1:8848
    alibaba:
      seata:
        #配置事物分组
        tx-service-group: phantom
    # Spring Cloud Stream 配置项，对应 BindingServiceProperties 类
    stream:
      function:
        definition: consumer;
      # Binding 配置项，对应 BindingProperties Map
      bindings:
        input-common-1:
          # 目的地。这里使用 RocketMQ Topic
          destination: topic-common-01
          content-type: application/json
          ## 消费者分组, 命名规则：group+topic名+xx
          group: group-common-1
        input-common-2:
          destination: topic-common-01
          content-type: application/json
          group: group-common-2
          consumer:
            concurrency: 20
            maxAttempts: 1
        input-common-3:
          destination: topic-common-01
          content-type: application/json
          group: group-common-3
          # Consumer 配置项，对应 ConsumerProperties 类
          consumer:
            concurrency: 20
            maxAttempts: 1
        input-temple-1:
          destination: topic-temple-01
          content-type: text/json
          group: group-temple-1
          consumer:
            concurrency: 5

      # Spring Cloud Stream RocketMQ 配置项
      rocketmq:
        binder:
          name-server: localhost:9876
        # spring.cloud.stream.rocketmq.bindings
        # enabled：是否开启消费，默认为 true。在日常开发时，如果在本地环境不想消费，可以通过设置 enabled为 false 进行关闭
        # broadcasting： 是否使用广播消费，默认为 false 使用的是集群消费。
        # 集群消费（Clustering）：集群消费模式下，相同 Consumer Group 的每个 Consumer 实例平均分摊消息
        # 广播消费（Broadcasting）：广播消费模式下，相同 Consumer Group 的每个 Consumer 实例都接收全量消息
        bindings:
          input-common-1:
            # RocketMQ Consumer 配置项
            consumer:
              # 顺序接收消息
              orderly: true
              # 是否开启消费，默认为 true
              enabled: true
              # 是否使用广播消费，默认为 false 使用集群消费，如果要使用广播消费值设成true
              broadcasting: false
          input-common-2:
            consumer:
              orderly: false
          input-common-3:
            consumer:
              # 基于 Tag 订阅，多个 Tag 使用 || 分隔，默认为空
              tags: tagObj
              # 异步消费消息模式下消费失败重试策略，默认为 0
              # -1：不重复，直接放入死信队列
              # 0：RocketMQ Broker 控制重试策略
              # >0：RocketMQ Consumer 控制重试策略
              delay-level-when-next-consume: 0
          input-temple-1:
            consumer:
              orderly: false


## seate 相关配置
seata:
  registry: # 配置 seata 注册中心, 告诉 seata client 怎么去访问 seata server (TC)
    type: nacos
    nacos:
      username: nacos
      password: nacos
      server-addr: 127.0.0.1:8848 #seata server 所在的 nacos 注册中心地址
      application: seata-server #seata server 的服务名（默认值就是 seata-server，没改可以不配置）
      group: SEATA_GROUP #seata server 的分组（默认值就是 SEATA_GROUP，没改可以不配置）
  config:
    type: nacos
    nacos:
      username: nacos
      password: nacos
      server-addr: 127.0.0.1:8848
      group: SEATA_GROUP

